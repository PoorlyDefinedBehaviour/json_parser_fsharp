%{
open Json
%}

// The start token becomes a parser function in the compiled code:
%start start

%token LEFTBRACE
%token RIGHTBRACE
%token <int> INT 
%token <float> FLOAT

%token EOF

// This is the type of the data produced by a successful reduction of the 'start'
// symbol:
%type <Value> start

%%

// These are the rules of the grammar along with the F# code of the 
// actions executed as rules are reduced.  
start: 
  | INT { Int $1 }

// Using F# keywords for nonterminal names is okay.
end: EOF { 3 }
